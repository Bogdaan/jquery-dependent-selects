/*
# jQuery Dependent Selects v1.0.0
# Copyright 2012 Mark J Smith, Simpleweb
# Details on http://github.com/simpleweb/jquery-dependent-selects
*/

// Generated by CoffeeScript 1.4.0

(function($) {
  return $.fn.dependentSelects = function(options) {
    var clearAllSelectsByParent, createNewSelect, createSelectId, prepareSelect, splitOptionName;
    if (options == null) {
      options = {};
    }
    options = $.extend({
      'separator': ' > ',
      'placeholder': '',
      'class': false
    }, options);
    createSelectId = function() {
      var int;
      int = parseInt(Math.random() * 1000);
      if ($("[data-dependent-id='" + int + "']").length > 0) {
        return createSelectId();
      } else {
        return int;
      }
    };
    splitOptionName = function($option) {
      var array, i, item, _i, _len;
      array = $option.text().split(options['separator']).map(function(valuePart) {
        return valuePart.trim();
      });
      i = 0;
      for (_i = 0, _len = array.length; _i < _len; _i++) {
        item = array[_i];
        if (item === '') {
          array.splice(i, 1);
          i--;
        }
        i++;
      }
      return array;
    };
    clearAllSelectsByParent = function($parent) {
      return $(".dependent-sub[data-dependent-id='" + ($parent.attr('data-dependent-id')) + "']").each(function() {
        if (parseInt($(this).attr('data-dependent-depth')) > parseInt($parent.attr('data-dependent-depth'))) {
          $(this).find('option:first').attr('selected', 'selected');
          return $(this).hide();
        }
      });
    };
    createNewSelect = function(options) {
      var $currentSelect, $newSelect, $select, name, select_id;
      if (options == null) {
        options = {};
      }
      name = options['name'];
      $select = options['select'];
      select_id = $select.attr('data-dependent-id');
      if (($currentSelect = $("select[data-dependent-parent='" + name + "'][data-dependent-id='" + select_id + "']")).length > 0) {
        return $currentSelect;
      }
      $newSelect = $('<select class="dependent-sub"/>').attr('data-dependent-parent', name).attr('data-dependent-depth', options['depth']).attr('data-dependent-input-name', $select.attr('data-dependent-input-name')).attr('data-dependent-id', select_id).addClass(options['class']).append("<option>" + options['placeholder'] + "</option>");
      $newSelect.insertAfter($select);
      return $newSelect.hide();
    };
    prepareSelect = function($select, depth, select_id) {
      var $options, name;
      $select.attr('data-dependent-depth', depth).attr('data-dependent-id', select_id);
      $options = $select.children('option');
      $options.each(function() {
        var $newOption, $option, $subSelect, name, val;
        $option = $(this);
        name = splitOptionName($option);
        val = $option.val();
        if (name.length > 1) {
          $subSelect = createNewSelect({
            name: name[0],
            select: $select,
            depth: depth + 1,
            placeholder: options['placeholder'],
            "class": options['class']
          });
          $newOption = $option.clone();
          $newOption.html(splitOptionName($newOption).slice(1).join(options['separator']).trim());
          $subSelect.append($newOption);
          $option.val(val).html(name[0]).attr('data-dependent-name', name[0]);
          if ($options.parent().find("[data-dependent-name='" + name[0] + "']").length > 1) {
            $option.remove();
          }
          return prepareSelect($subSelect, depth + 1, select_id);
        }
      });
      name = $select.attr('name');
      return $select.off('change').on('change', function() {
        var $sub, val, valName;
        $('select[name]').removeAttr('name');
        valName = $select.find(':selected').html();
        val = $select.val();
        select_id = $select.attr('data-dependent-id');
        clearAllSelectsByParent($select);
        if (($sub = $(".dependent-sub[data-dependent-parent='" + valName + "'][data-dependent-id='" + select_id + "']")).length > 0) {
          $sub.show();
          return $sub.attr('name', $select.attr('data-dependent-input-name'));
        } else {
          return $select.attr('name', $select.attr('data-dependent-input-name'));
        }
      });
    };
    return this.each(function() {
      var $select;
      $select = $(this);
      $select.attr('data-dependent-input-name', $select.attr('name'));
      return prepareSelect($select, 0, createSelectId());
    });
  };
})(jQuery);
